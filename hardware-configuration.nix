# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usbhid" "uas" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/3d5f9132-6603-4fc3-aa8b-59d45b425dc8";
    fsType = "btrfs";
    options = [ "subvol=@" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/54A4-C4C4";
    fsType = "vfat";
    options = [ "fmask=0022" "dmask=0022" "noatime" ];
  };

  fileSystems."/media/cachy" = {
    device = "/dev/disk/by-uuid/b73dec90-d4da-4abb-bbfd-e2a19202545e";
    fsType = "ext4";
    options = [ "rw" "noatime" "lazytime" "x-systemd.automount" "nofail" ];
  };

  fileSystems."/media/e" = {
    device = "/dev/sda2";
    fsType = "ntfs-3g";
    options = [ "rw" "uid=1000" "gid=100" "noatime" "x-systemd.automount" "nofail" ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0f3u1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  #hardware.nvidia.package = config.boot.kernelPackages.nvidiaPackages.production;
}
